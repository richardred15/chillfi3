name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: musiclib_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package.json
    
    - name: Install dependencies
      run: |
        cd server
        npm install
    
    - name: Run tests
      run: |
        cd server
        npm test
      env:
        DB_HOST: 127.0.0.1
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: musiclib_test
        JWT_SECRET: test_secret

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      continue-on-error: true
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: |
          chillfi3:latest
          chillfi3:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Push to Docker Hub
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      run: |
        if [ -n "${{ secrets.DOCKER_USERNAME }}" ]; then
          docker tag chillfi3:latest ${{ secrets.DOCKER_USERNAME }}/chillfi3:latest
          docker tag chillfi3:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/chillfi3:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/chillfi3:latest || echo "Push failed - no Docker Hub access"
          docker push ${{ secrets.DOCKER_USERNAME }}/chillfi3:${{ github.sha }} || echo "Push failed - no Docker Hub access"
        else
          echo "No Docker Hub credentials - skipping push"
        fi
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd server
        npm install
    
    - name: Run security audit
      run: |
        cd server
        npm audit --audit-level moderate || true
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '0'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('trivy-results.sarif') != ''
      with:
        sarif_file: 'trivy-results.sarif'